public class Solution {
    
    public ArrayList<Integer> sieve(int n){
        boolean[] a= new boolean[n+1];
        //Arrays.fill(a,false);
        for(int i=2;i*i<=n;i++){
            if(a[i]) continue;
            for(int j=i+i;j<=n;j+=i)
                a[i]=true;
        }
        
        ArrayList<Integer> ar=new ArrayList<>();
        for(int i=2;i<=n;i++)
            if(!a[i]) ar.add(i);
        return ar;
    }
    
    public ArrayList<Integer> primesum(int A) {
        ArrayList<Integer> prime=sieve(A);
        boolean flag=false;
        int n=prime.size();
        
        ArrayList<Integer> ar=new ArrayList<>();
        for(int i=0;i<n;i++){
            System.out.println(prime.get(i)+"==");
            if(prime.contains(A-prime.get(i))){
                ar.add(prime.get(i));
                ar.add(A-prime.get(i));
                break;
            }
        }
        return ar;
    }
}
