public class Solution {
    
    public boolean check(ArrayList<ArrayList<Character>> a,int r, int c, char k){
        //row
        for(int i=0;i<9;i++)
            if(a.get(r).get(i)==k) return false;
        //coulumn
        for(int i=0;i<9;i++)
            if(a.get(i).get(c)==k) return false;
        //square
        int i=(r/3);
        i*=3;
        int j=(c/3);
        j*=3;
        
        for(int n=0;n<3;n++)
            for(int m=0;m<3;m++)
                if(a.get(i+n).get(j+m)==k) return false;
        
        return true;
    }
    
    public boolean solve(ArrayList<ArrayList<Character>> a,int r, int c){
        if(r==9 && c== 9) return true;
        if(c==9) return solve(a,r+1,0);
        if(a.get(r).get(c)!='.') return solve(a,r,c+1);
        
        for(int i=1;i<10;i++){
            char in=(char)(i+'0');
            boolean f=check(a,r,c,in);
            if(f){
                a.get(r).set(c,in);
                boolean f1=solve(a,r,c+1);
                if(f1) return true;
                a.get(r).set(c,'.');
            }
        }
        return false;
    }
    
    public void solveSudoku(ArrayList<ArrayList<Character>> a) {
        boolean f=solve(a,0,0);
        System.out.println(f);
    }
}
