public class Solution {
    
    class Pair{
        String w;
        int dist;
        Pair(String a, int b){
            w=a;
            dist=b;
        }
    }
    
    public boolean check(String a, String b){
        int n=a.length();
        if(b.length()!=n) return false;
        
        int count=0;
        for(int i=0;i<n;i++){
            if(a.charAt(i)!=b.charAt(i)) count++;
            if(count==2) return false;
        }
        
        if(count==1) return true;
        return false;
    }
    
    public int ladderLength(String start, String end, ArrayList<String> dict) {
        if(start.equals(end)) return 1;
        int n=dict.size();
        boolean[] vis=new boolean[n+1];
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(start,1));
        dict.add(end);
        
        while(!q.isEmpty()){
            Pair p=q.poll();
            if(p.w.equals(end)) return p.dist;
            
            //System.out.println(p.w+" "+p.dist);
            for(int i=0;i<n;i++){
                if(vis[i]) continue;
                if(!check(p.w,dict.get(i))) continue;

                vis[i]=true;
                q.add(new Pair(dict.get(i),p.dist+1));
            }
        }
        
        return 0;
    }
}
