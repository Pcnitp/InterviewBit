public class Solution {
    
    class Pair{
        int x, y, dist;
        Pair(int a, int b, int c){
            x=a;
            y=b;
            dist=c;
        }
    }
    
    public int knight(int m, int n, int x1, int y1, int x2, int y2) {
        x1=x1-1;
        y1=y1-1;
        x2=x2-1;
        y2=y2-1;
        boolean[][] vis=new boolean[m+1][n+1];
        Queue<Pair> q=new LinkedList<>();
        q.add(new Pair(x1,y1,0));
        vis[x1][y1]=true;
        
        int[] dx={2,2,-2,-2,1,1,-1,-1};
        int[] dy={1,-1,1,-1,2,-2,2,-2};
        
        while(!q.isEmpty()){
            Pair p=q.poll();
            if(p.x==x2&&p.y==y2) return p.dist;
            //System.out.println(p.x+" "+p.y+" "+p.dist);
            for(int i=0;i<8;i++){
                int x3=p.x+dx[i];
                int y3=p.y+dy[i];
                
                if(x3<0||y3<0||x3>=m||y3>=n||vis[x3][y3]) continue;
                vis[x3][y3]=true;
                q.add(new Pair(x3,y3,p.dist+1));
            }
        }
        
        return -1;
    }
}
