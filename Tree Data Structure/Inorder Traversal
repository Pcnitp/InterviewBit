/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    ArrayList<Integer> ans;
    
    // public void inorder(TreeNode a){
    //     if(a==null) return;
    //     inorder(a.left);
    //     ans.add(a.val);
    //     inorder(a.right);
    // }
    
    public ArrayList<Integer> inorderTraversal(TreeNode a) {
        ans=new ArrayList<Integer>();
        //inorder(a);
        
        Stack<TreeNode> st=new Stack<>();
        TreeNode curr=a;
        
        while(curr!=null || !st.isEmpty()){
            while(curr!=null){
                st.push(curr);
                curr=curr.left;
            }
            curr=st.pop();
            ans.add(curr.val);
            curr=curr.right;
        }
        
        return ans;
        
    }
}
