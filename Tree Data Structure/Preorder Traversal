/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    public ArrayList<Integer> preorderTraversal(TreeNode a) {
        ArrayList<Integer> ar=new ArrayList<>();
        Stack<TreeNode> st=new Stack<>();
        st.push(a);
        
        while(!st.isEmpty()){
            TreeNode curr=st.pop();
            ar.add(curr.val);
            if(curr.right!=null) st.push(curr.right);
            if(curr.left!=null) st.push(curr.left);
        }
        return ar;
    }
}
