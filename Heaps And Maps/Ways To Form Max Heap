public class Solution {
    
    public long m=1000000007;
    long[][] ncr=new long[101][101];
    long[] dp=new long[101];
    
    public long sol(int n){
        if(n<=1) return 1;
        if(dp[n]!=-1) return dp[n];
        
        int fill=0,left=0,right=0,pw=2;
        
        while(fill+pw<n-1){
            fill+=pw;
            left+=pw/2;
            right+=pw/2;
            pw*=2;
        }
        
        int rem=n-1-fill;
        if(rem>pw/2){
            left+=pw/2;
            right+=rem-pw/2;
        }
        else left+=rem;
        
        dp[n]=((sol(left)*sol(right))%m * ncr[n-1][left])%m;
        return dp[n];
    }
    
    public int solve(int n) {
        Arrays.fill(dp,-1);
        ncr[0][0]=1;
        for(int i=1;i<101;i++){
            ncr[i][0]=1;
            ncr[i][i]=1;
            for(int j=1;j<i;j++)
                ncr[i][j]=(ncr[i-1][j]+ncr[i-1][j-1])%m;
        }
        
        long ans=sol(n);
        return (int)ans;
    }
}
