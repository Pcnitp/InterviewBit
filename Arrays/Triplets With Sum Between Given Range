public class Solution {
    public int solve(ArrayList<String> a) {
        int n=a.size();
        double[] b=new double[n];
        for(int i=0;i<n;i++)
            b[i]=Double.parseDouble(a.get(i));
        
        ArrayList<Double> x=new ArrayList<>();
        ArrayList<Double> y=new ArrayList<>();
        ArrayList<Double> z=new ArrayList<>();
        
        for(int i=0;i<n;i++){
            if(b[i]<(double)(2/(double)3)) x.add(b[i]);
            else if(b[i]<(double)(1)) y.add(b[i]);
            else z.add(b[i]);
        }
        
        //System.out.println(x);
        //System.out.println(y);
        //System.out.println(z);
        
        int nx=x.size();
        int ny=y.size();
        int nz=z.size();
        //case XXX
        
        if(nx>=3){
            double max1=0.0,max2=0.0,max3=0.0;
            for(int i=0;i<nx;i++){
                double d=x.get(i);
                if(d>max1){
                    max3=max2;
                    max2=max1;
                    max1=d;
                }
                else if(d>max2){
                    max3=max2;
                    max2=d;
                }
                else if(d>max3) max3=d;
            }
            double sum=max1+max2+max3;
            if(sum>1.0 && sum<2.0)
                return 1;
        }
        
        // case XXZ
        if(nx>=2 && nz>=1){
            //System.out.println("kjdjnndf");
            double minz=2.0, min1=2.0, min2=2.0;
            for(int i=0;i<nz;i++)
                if(z.get(i)<minz) minz=z.get(i);
            
            for(int i=0;i<nx;i++){
                double d=x.get(i);
                if(d<min1){
                    min2=min1;
                    min1=d;
                }
                else if(d<min2) min2=d;
            }
            
            double sum=minz+min2+min1;
            if(sum>1.0 && sum<2.0)
                return 1;
        }
        
        //XYY
        if(nx>=1 && ny>=2){
            double minx=2.0, min1=2.0, min2=2.0;
            for(int i=0;i<nx;i++)
                if(x.get(i)<minx) minx=x.get(i);
            
            for(int i=0;i<ny;i++){
                double d=y.get(i);
                if(d<min1){
                    min2=min1;
                    min1=d;
                }
                else if(d<min2) min2=d;
            }
            
            double sum=minx+min2+min1;
            if(sum>1.0 && sum<2.0)
                return 1;
        }
        
        //XYZ
        if(nx>=1 && ny>=1 && nz>=1){
            //System.out.println("kjdjnndf");
            double minx=2.0, miny=2.0, minz=2.0;
            for(int i=0;i<nx;i++)
                if(x.get(i)<minx) minx=x.get(i);
                
            for(int i=0;i<ny;i++)
                if(y.get(i)<miny) miny=y.get(i);
                
            for(int i=0;i<nz;i++)
                if(z.get(i)<minz) minz=z.get(i);
            
            double sum=minz+minx+miny;
            if(sum>1.0 && sum<2.0)
                return 1;
        }
        
        //XXY
        if(nx>=2&&ny>=1){
            double max1=0.0, max2=0.0, miny=2.0;
            for(int i=0;i<ny;i++)
                if(y.get(i)<miny) miny=y.get(i);
            
            for(int i=0;i<nx;i++){
                double d=x.get(i);
                if(d>max1){
                    max2=max1;
                    max1=d;
                }
                else if(d>max2) max2=d;
            }
            
            double sum=miny+max1+max2;
            if(sum>1.0 && sum<2.0)
                return 1;
        }
        
        //XXY
        if(nx>=2&&ny>=1){
            double maxy=0.0, min1=2.0, min2=2.0;
            for(int i=0;i<ny;i++)
                if(y.get(i)>maxy) maxy=y.get(i);
                
            for(int i=0;i<nx;i++){
                double d=x.get(i);
                if(d<min1){
                    min2=min1;
                    min1=d;
                }
                else if(d<min2) min2=d;
            }
            
            double sum=maxy+min1+min2;
            if(sum>1.0 && sum<2.0)
                return 1;
        }
        
        return 0;
    }
}
