/*
1.Find the largest x such that P[x]<P[x+1].
(If there is no such x, P is the last permutation.)
2.Find the largest y such that P[x]<P[y].
3.Swap P[x] and P[y].
4.Reverse P[x+1 .. n].
*/

public class Solution {
	public void nextPermutation(ArrayList<Integer> a) {
	    int n=a.size();
	    int x=-1;
	    for(int i=n-1;i>0;i--){
	        if(a.get(i-1)<a.get(i)){
	            x=i-1;
	            break;
	        }
	    }
	    
	    if(x==-1){
	        Collections.sort(a);
	        return;
	    }
	    
	    int y=x+1;
	    for(int j=y+1;j<n;j++)
	        if(a.get(j)>a.get(x)) y=j;
	        
	    //System.out.println(x+" "+y);
	    int t=a.get(x);
	    a.set(x,a.get(y));
	    a.set(y,t);
	    
	    int i=x+1,j=n-1;
	    while(i<j){
	        t=a.get(i);
            a.set(i,a.get(j));
            a.set(j,t);
            i++;
            j--;
	    }
	    
	   // for(i=0;i<n;i++)
	   //     System.out.print(a.get(i)+" ");
	}
}
