/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    
    public class SortBy implements Comparator<Interval>{
        public int compare(Interval a, Interval b){
            if(a.start<b.start) return -1;
            if(a.start>b.start) return 1;
            if(a.end<b.end) return -1;
            if(a.end>b.end) return 1;
            return 0;
        }
    }
    
    public ArrayList<Interval> merge(ArrayList<Interval> a) {
        
        Collections.sort(a,new SortBy());
        
        for(int i=0;i<a.size()-1;i++){
            //System.out.print(a.get(i).start+","+a.get(i).end+" ");
            if(a.get(i).end>=a.get(i+1).start){
                int s=Math.min(a.get(i).start,a.get(i+1).start);
                int e=Math.max(a.get(i).end,a.get(i+1).end);
                Interval in=new Interval(s,e);
                a.set(i,in);
                a.remove(i+1);
                i--;
            }
        }
        return a;
    }
}
