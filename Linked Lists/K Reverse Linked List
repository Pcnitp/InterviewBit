/**
 * Definition for singly-linked list.
 * class ListNode {
 *     public int val;
 *     public ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
public class Solution {
    
    public ListNode reverse(ListNode a, int n, int m) {
        if(n==m) return a;
        ListNode start=a;
        ListNode prev=new ListNode(0);
        prev.next=a;
        for(int i=0;i<n-1;i++){
            prev=start;
            start=start.next;
        }
        //System.out.println(prev.val+" "+start.val);
        ListNode first=start;
        ListNode sec=start.next;
        for(int i=n;i<m;i++){
            //System.out.println("===");
            ListNode temp=sec.next;
            sec.next=first;
            first=sec;
            sec=temp;
        }
        
        //System.out.println(first.val+" "+sec.val);
        prev.next=first;
        start.next=sec;
        
        if(n==1) return prev.next;
        return a;
    }
    
    public ListNode reverseList(ListNode a, int k) {
        if(k==1) return a;
        int n=0;
        ListNode b=a;
        while(b!=null){
            b=b.next;
            n++;
        }
        ListNode p=new ListNode(0);
        p.next=a;
        b=p;
        
        for(int i=0;i<n/k;i++){
            //System.out.println(b.val);
            b.next=reverse(b.next,1,k);
            for(int j=0;j<k;j++)
                b=b.next;
        }
        
        return p.next;
    }
}
